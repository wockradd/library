{"version":3,"sources":["serviceWorker.js","components/Book.js","data/Data.js","components/AddBook.js","components/SearchBook.js","components/FormHolder.js","components/Library.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Book","props","className","title","author","quantity","disabled","onClick","e","booksData","AddBook","onSubmit","preventDefault","target","value","trim","toString","alert","type","name","placeholder","SearchBook","onChange","FormHolder","searchBookOnChange","addBookOnSubmit","Library","useState","filterString","setFilterString","books","setBooks","removeBook","book","i","length","JSON","stringify","tempBooks","text","atIndex","alreadyHaveBook","toLowerCase","concat","map","includes","key","App","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uKAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kBCUSC,EA1BF,SAACC,GAKV,OACI,yBAAMC,UAAU,YACZ,4BAAKD,EAAME,OACX,iCAAOF,EAAMG,QACb,wCAAcH,EAAMI,UACpB,4BACIH,UAAU,cACVI,SAAYL,EAAMI,UAAY,EAC9BE,QACI,SAAAC,GACIP,EAAMM,QAAQ,CAAC,MAAQN,EAAME,MAAM,OAASF,EAAMG,OAAO,SAAWH,EAAMI,aALtF,mBCZCI,EAAY,CACrB,CAAE,MAAS,UACT,OAAU,eACV,SAAW,GAEb,CACE,MAAS,oBACT,OAAU,cACV,SAAW,GAEb,CACE,MAAS,yBACT,OAAU,gBACV,SAAW,GAEb,CACE,MAAS,oBACT,OAAU,cACV,SAAW,GAEb,CACE,MAAS,iBACT,OAAU,mBACV,SAAW,IAEb,CAAE,MAAS,iBACT,OAAU,aACV,SAAW,GAEb,CAAE,MAAS,kBACT,OAAU,iBACV,SAAW,GAEb,CAAE,MAAS,mBACT,OAAU,iBACV,SAAW,GAEb,CAAE,MAAS,kBACT,OAAU,cACV,SAAW,ICNFC,MA/Bf,SAAiBT,GACb,OACI,6BACI,wBAAIC,UAAU,YAAd,eACA,0BACIS,SAAU,SAAAH,GACNA,EAAEI,iBAC0B,KAAzBJ,EAAEK,OAAOV,MAAMW,OAA0C,KAA1BN,EAAEK,OAAOT,OAAOU,MAC9Cb,EAAMU,SAAS,CACX,MAAQH,EAAEK,OAAOV,MAAMW,MAAMC,OAAOC,WACpC,OAASR,EAAEK,OAAOT,OAAOU,MAAMC,OAAOC,WACtC,SAAW,IAGfC,MAAM,+BAGdf,UAAU,YAGV,2BAAOgB,KAAK,OAAOC,KAAK,QAAQjB,UAAU,cAAckB,YAAY,UACpE,6BAEA,2BAAOF,KAAK,OAAMC,KAAK,SAAQjB,UAAU,cAAakB,YAAY,WAClE,6BACA,2BAAOF,KAAK,SAASJ,MAAM,SAAQZ,UAAU,mBCT9CmB,MAhBf,SAAoBpB,GAChB,OACI,6BACI,wBAAIC,UAAU,YAAd,UACA,0BAAMA,UAAU,YAChB,2BACIgB,KAAK,OACLI,SAAU,SAACd,GAAD,OAAKP,EAAMqB,SAASd,EAAEK,OAAOC,QACvCZ,UAAU,cACVkB,YAAY,uBCEbG,MATf,SAAoBtB,GAChB,OACI,yBAAKC,UAAW,aACZ,kBAAC,EAAD,CAAYoB,SAAUrB,EAAMuB,qBAC5B,kBAAC,EAAD,CAASb,SAAUV,EAAMwB,oBC0EtBC,EA7EC,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACXC,EADW,KACGC,EADH,OAEQF,mBAASlB,GAFjB,mBAEXqB,EAFW,KAEJC,EAFI,KAmCZC,EAAa,SAACC,GAClB,IAAI,IAAIC,EAAE,EAAIA,EAAEJ,EAAMK,OAASD,IAC7B,GAAGE,KAAKC,UAAUP,EAAMI,MAAME,KAAKC,UAAUJ,GAAM,CACjD,IAAIK,EAAS,YAAOR,GACpBQ,EAAUJ,GAAG7B,WACb0B,EAASO,GACT,QAON,OACE,6BACE,kBAAC,EAAD,CACEd,mBA9CyB,SAACe,GAC5BV,EAAgBU,IA8Cdd,gBA1CU,SAACQ,GAKf,IAJA,IACIO,EADAC,GAAkB,EAIdP,EAAE,EAAIA,EAAEJ,EAAMK,OAASD,IAC7B,GAAGD,EAAK9B,MAAMuC,gBAAkBZ,EAAMI,GAAG/B,MAAMuC,eAAiBT,EAAK7B,OAAOsC,gBAAkBZ,EAAMI,GAAG9B,OAAOsC,cAAc,CAC1HD,GAAkB,EAClBD,EAAUN,EACV,MAKJ,GAAGO,EAAgB,CACjB,IAAIH,EAAS,YAAOR,GACpBQ,EAAUE,GAASnC,WACnB0B,EAASO,QAETP,EAASD,EAAMa,OAAOV,OAyBtB,yBAAK/B,UAAW,YACf4B,EAAMc,KAAI,SAAAX,GACP,OAAGA,EAAK9B,MAAMuC,cAAcG,SAASjB,EAAac,eAE1C,kBAAC,EAAD,CACIvC,MAAO8B,EAAK9B,MACZC,OAAQ6B,EAAK7B,OACbC,SAAU4B,EAAK5B,SACfyC,IAAKb,EAAK9B,MAAMuC,cAAc,IAAIT,EAAK7B,OAAOsC,cAC9CnC,QAASyB,IAIV,WC3DRe,MATf,WACE,OACE,6BACE,wBAAI7C,UAAU,YAAd,mBACA,kBAAC,EAAD,Q,MCIN8C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAGFC,SAASC,eAAe,SRkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.1bf2d715.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\n\nconst Book = (props) => {\n    \n\n    \n    \n    return (\n        <div  className='centered'>\n            <h3>{props.title}</h3>\n            <p>By {props.author}</p>\n            <p>Quantity: {props.quantity}</p>\n            <button\n                className='prettyInput'\n                disabled = {props.quantity <= 0}   \n                onClick = {\n                    e=>{\n                        props.onClick({\"title\":props.title,\"author\":props.author,\"quantity\":props.quantity})\n                    }\n                }\n            >\n                Checkout Book\n            </button>\n        </div>\n    )\n\n  }\n\nexport default Book\n","export const booksData = [\n    { \"title\": \"Hellboy\",\n      \"author\": \"Mike Mignola\",\n      \"quantity\":2\n    },\n    {\n      \"title\": \"The Satanic Bible\",\n      \"author\": \"Anton LaVey\",\n      \"quantity\":1\n    },\n    {\n      \"title\": \"Breakfast of Champions\",\n      \"author\": \"Kurt Vonnegut\",\n      \"quantity\":3\n    },\n    {\n      \"title\": \"Beren and Luthien\",\n      \"author\": \"JRR Tolkien\",\n      \"quantity\":5\n    },\n    {\n      \"title\": \"Fire and Blood\",\n      \"author\": \"George RR Martin\",\n      \"quantity\":10\n    },\n    { \"title\": \"V For Vendetta\",\n      \"author\": \"Alan Moore\",\n      \"quantity\":2\n    },\n    { \"title\": \"Attack on Titan\",\n      \"author\": \"Hajime Isayama\",\n      \"quantity\":2\n    },\n    { \"title\": \"The Walking Dead\",\n      \"author\": \"Robert Kirkman\",\n      \"quantity\":2\n    },\n    { \"title\": \"Cirque De Freak\",\n      \"author\": \"Derren Shan\",\n      \"quantity\":2\n    }\n]","import React from 'react'\n\nfunction AddBook(props) {\n    return (\n        <div>\n            <h2 className='centered'>Return Book</h2>\n            <form\n                onSubmit={e=>{\n                    e.preventDefault()\n                    if(e.target.title.value !== '' && e.target.author.value !== ''){\n                        props.onSubmit({\n                            \"title\":e.target.title.value.trim().toString(),\n                            \"author\":e.target.author.value.trim().toString(),\n                            \"quantity\":1\n                        })\n                    }else{\n                        alert(\"Fill out the form dickhead\")\n                    }\n                }}\n                className='centered'\n            >\n                \n                <input type='text' name='title' className='prettyInput' placeholder='Title'></input>\n                <br/>\n                \n                <input type='text'name='author'className='prettyInput'placeholder='Author'></input>\n                <br/>\n                <input type='submit' value='Return'className='prettyInput'></input>\n            </form>   \n        </div>\n    )\n}\n\nexport default AddBook\n","import React from 'react'\n\nfunction SearchBook(props) {\n    return (\n        <div>\n            <h2 className='centered'>Search</h2>\n            <form className='centered'>\n            <input \n                type='text' \n                onChange={(e)=>props.onChange(e.target.value)}\n                className='prettyInput'\n                placeholder='Search by title'\n            ></input>\n            </form> \n        </div>\n    )\n}\n\nexport default SearchBook\n","import React from 'react'\nimport AddBook from './AddBook'\nimport SearchBook from './SearchBook'\n\nfunction FormHolder(props) {\n    return (\n        <div className ='inputGrid'>\n            <SearchBook onChange={props.searchBookOnChange}/>  \n            <AddBook onSubmit={props.addBookOnSubmit}/>\n        </div>\n    )\n}\n\nexport default FormHolder\n","import React,{useState} from 'react'\nimport Book from './Book'\nimport {booksData} from \"../data/Data\"\nimport FormHolder from './FormHolder'\n\nconst Library = () => {\n    const [filterString, setFilterString] = useState('')\n    const [books, setBooks] = useState(booksData)\n\n    \n    const handleFilterTextChange = (text) =>{\n        setFilterString(text)\n    }\n\n    \n    const addBook = (book)=>{\n      let alreadyHaveBook = false\n      let atIndex;\n\n      //loop through to see if we have the book or not\n      for(let i=0 ; i<books.length ; i++){\n        if(book.title.toLowerCase() === books[i].title.toLowerCase() && book.author.toLowerCase() === books[i].author.toLowerCase()){\n          alreadyHaveBook = true\n          atIndex = i\n          break\n        }\n      }\n\n      \n      if(alreadyHaveBook){//update books state\n        let tempBooks = [...books]//not sure why i've gotta do this copy thing tbh\n        tempBooks[atIndex].quantity++   //doesnt rerender otherwise\n        setBooks(tempBooks)\n      }else{//add the new book\n        setBooks(books.concat(book))\n      }\n    }\n\n\n\n    const removeBook = (book)=>{\n      for(let i=0 ; i<books.length ; i++){\n        if(JSON.stringify(books[i])===JSON.stringify(book)){\n          let tempBooks = [...books]//not sure why i've gotta do this copy thing tbh\n          tempBooks[i].quantity--   //doesnt rerender otherwise\n          setBooks(tempBooks)\n          break\n        }\n      }\n    }\n\n    \n    \n    return (\n      <div>\n        <FormHolder \n          searchBookOnChange={handleFilterTextChange} \n          addBookOnSubmit={addBook}\n        />\n        <div className= 'bookGrid'>\n        {books.map(book=>{\n            if(book.title.toLowerCase().includes(filterString.toLowerCase())){\n                return (\n                    <Book \n                        title={book.title} \n                        author={book.author} \n                        quantity={book.quantity}\n                        key={book.title.toLowerCase()+\" \"+book.author.toLowerCase()}\n                        onClick={removeBook}\n                    />\n                  )\n            }else{\n                return null\n            }\n        })}\n        </div>\n      </div>\n    )\n  }\n\n\n\nexport default Library\n","import React from 'react';\nimport Library from \"./components/Library\"\n\n\nfunction App() {\n  return (\n    <div>\n      <h1 className='centered'>Wockrad Library</h1>\n      <Library/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App'\nimport './index.css'\n\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById(\"root\")\n)\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}